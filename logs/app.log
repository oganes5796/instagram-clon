{"level":"fatal","ts":1740296180.706056,"caller":"app/service_provider.go:68","msg":"failed to create DB client:","error":"failed to connect to db: failed to connect to `host=localhost user=user database=user-service`: dial error (dial tcp 127.0.0.1:54321: connect: connection refused)","errorVerbose":"failed to connect to db: failed to connect to `host=localhost user=user database=user-service`: dial error (dial tcp 127.0.0.1:54321: connect: connection refused):\n    github.com/oganes5796/instagram-clon/internal/client/db/pg.New\n        /home/georgy/go/projects/lessons/instagram-clon/internal/client/db/pg/client.go:18","stacktrace":"github.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).DBClient\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:68\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).UserRepository\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:93\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).UserService\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:102\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).UserImpl\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:112\ngithub.com/oganes5796/instagram-clon/internal/app.(*App).initGRPCServer\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/app.go:78\ngithub.com/oganes5796/instagram-clon/internal/app.(*App).initDeps\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/app.go:51\ngithub.com/oganes5796/instagram-clon/internal/app.NewApp\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/app.go:26\nmain.main\n\t/home/georgy/go/projects/lessons/instagram-clon/cmd/user-service/main.go:19\nruntime.main\n\t/usr/lib/go-1.22/src/runtime/proc.go:271"}
{"level":"info","ts":1740296215.0786731,"caller":"app/app.go:83","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"info","ts":1740296255.0066793,"caller":"pg/pg.go:112","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:43968', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>).WithValue(type pg.key, val <not Stringer>)","sql":"user_repository.Regist","query":"INSERT INTO users (email,username,password) VALUES (\"ogannisian5796@gmail.com\",\"Oganes\",\"qwerty\") RETURNING id"}
{"level":"info","ts":1740296255.1988635,"caller":"user/register.go:18","msg":"Inserted user with id:","id":43}
{"level":"info","ts":1740296651.8874998,"caller":"logger/logger.go:77","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"info","ts":1740296659.5208547,"caller":"logger/logger.go:77","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:42410', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>)","sql":"user_repository.Regist","query":"INSERT INTO users (email,username,password) VALUES (\"ogannisian5796@gmail.com\",\"Oganes\",\"qwerty\") RETURNING id"}
{"level":"info","ts":1740296659.5295086,"caller":"logger/logger.go:77","msg":"Inserted user with id:","id":44}
{"level":"info","ts":1740296666.1971307,"caller":"logger/logger.go:77","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:42410', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>)","sql":"user_repository.Regist","query":"INSERT INTO users (email,username,password) VALUES (\"ogannisian5796@gmail.com\",\"Oganes\",\"qwerty\") RETURNING id"}
{"level":"info","ts":1740296666.203205,"caller":"logger/logger.go:77","msg":"Inserted user with id:","id":45}
{"level":"info","ts":1740296834.9070837,"caller":"logger/logger.go:77","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"fatal","ts":1740296834.9131346,"caller":"logger/logger.go:89","msg":"failed to run app:","error":"listen tcp 127.0.0.1:50051: bind: address already in use","stacktrace":"github.com/oganes5796/instagram-clon/internal/logger.Fatal\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/logger/logger.go:89\nmain.main\n\t/home/georgy/go/projects/lessons/instagram-clon/cmd/user-service/main.go:21\nruntime.main\n\t/usr/lib/go-1.22/src/runtime/proc.go:271"}
{"level":"info","ts":1740296947.599362,"caller":"logger/logger.go:77","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"info","ts":1740296952.1175916,"caller":"logger/logger.go:77","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:40516', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>)","sql":"user_repository.Regist","query":"INSERT INTO users (email,username,password) VALUES (\"ogannisian5796@gmail.com\",\"Oganes\",\"qwerty\") RETURNING id"}
{"level":"info","ts":1740296952.126154,"caller":"logger/logger.go:77","msg":"Inserted user with id:","id":46}
{"level":"fatal","ts":1740371253.497515,"caller":"logger/logger.go:89","msg":"failed to create DB client:","error":"failed to connect to db: failed to connect to `host=localhost user=user database=user-service`: dial error (dial tcp 127.0.0.1:54321: connect: connection refused)","errorVerbose":"failed to connect to db: failed to connect to `host=localhost user=user database=user-service`: dial error (dial tcp 127.0.0.1:54321: connect: connection refused):\n    github.com/oganes5796/instagram-clon/internal/client/db/pg.New\n        /home/georgy/go/projects/lessons/instagram-clon/internal/client/db/pg/client.go:18","stacktrace":"github.com/oganes5796/instagram-clon/internal/logger.Fatal\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/logger/logger.go:89\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).DBClient\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:68\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).UserRepository\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:93\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).UserService\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:102\ngithub.com/oganes5796/instagram-clon/internal/app.(*serviceProvider).UserImpl\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/service_provider.go:111\ngithub.com/oganes5796/instagram-clon/internal/app.(*App).initGRPCServer\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/app.go:83\ngithub.com/oganes5796/instagram-clon/internal/app.(*App).initDeps\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/app.go:56\ngithub.com/oganes5796/instagram-clon/internal/app.NewApp\n\t/home/georgy/go/projects/lessons/instagram-clon/internal/app/app.go:31\nmain.main\n\t/home/georgy/go/projects/lessons/instagram-clon/cmd/user-service/main.go:14\nruntime.main\n\t/usr/lib/go-1.22/src/runtime/proc.go:271"}
{"level":"info","ts":1740371272.0980504,"caller":"logger/logger.go:77","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"info","ts":1740391005.825733,"caller":"logger/logger.go:77","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"info","ts":1740391025.3761253,"caller":"logger/logger.go:77","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:43098', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>)","sql":"user_repository.Regist","query":"INSERT INTO users (email,username,password) VALUES (\"ogannisian5796@gmail.com\",\"Oganes\",\"qwerty\") RETURNING id"}
{"level":"info","ts":1740391025.5195894,"caller":"logger/logger.go:77","msg":"Inserted user with id:","id":1}
{"level":"info","ts":1740391096.7585628,"caller":"logger/logger.go:77","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:43098', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>)","sql":"user_repository.Get","query":"SELECT id FROM users WHERE password_hash = \"\" AND username = \"\""}
{"level":"info","ts":1740391141.144391,"caller":"logger/logger.go:77","msg":"GRPC server is running","address":"localhost:50051"}
{"level":"info","ts":1740391145.9407775,"caller":"logger/logger.go:77","msg":"SQL query executed","ctx":"context.Background.WithValue(type transport.connectionKey, val <not Stringer>).WithValue(type peer.peerKey, val Peer{Addr: '127.0.0.1:48160', LocalAddr: '127.0.0.1:50051', AuthInfo: 'insecure'}).WithCancel.WithValue(type metadata.mdIncomingKey, val <not Stringer>).WithValue(type grpc.serverKey, val <not Stringer>).WithValue(type grpc.streamKey, val <not Stringer>)","sql":"user_repository.Get","query":"SELECT id FROM users WHERE password = \"\" AND username = \"\""}
